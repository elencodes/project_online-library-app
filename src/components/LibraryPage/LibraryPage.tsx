import { useState, useEffect } from "react";
import { useTypedSelector } from "../../hooks/useTypedSelector";
import { handlePagesCounts } from "../../utils/handlePagesCount";
import { calculatePagesCount } from "../../utils/calculatePagesCount";
import SearchForm from "../SearchForm/SearchForm";
import FilterButton from "../Buttons/FilterButton/FilterButton";
import BookList from "../BookList/BookList";
import styles from "./LibraryPage.module.scss";

const LibraryPage = () => {
	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–Ω—É–∂–Ω–æ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏)
	const [currentPage, setCurrentPage] = useState(1);

	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ (All books –∏–ª–∏ Favourites)
	const [activeFilter, setActiveFilter] = useState<string>("All books");

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Redux store
	const totalBooks = useTypedSelector((state) => state.topBooks.totalBooks);
	const favourites = useTypedSelector((state) => state.favourites.favourites);
	const { searchResults, isSearching, isSearchResultsLoading } =
		useTypedSelector((state) => state.searchResults);

	// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
	const maxResults = 30; // API –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥
	const booksPerPage = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∫–Ω–∏–≥ –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (—É—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä)
	const totalItems =
		activeFilter === "Favourites"
			? favourites.length // –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä "Favourites", –±–µ—Ä–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥
			: isSearching
			? searchResults.length // –ï—Å–ª–∏ –∏–¥–µ—Ç –ø–æ–∏—Å–∫, –±–µ—Ä–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥
			: totalBooks; // –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö ‚Äî –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ  –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
	const totalPages =
		activeFilter === "Favourites"
			? Math.ceil(totalItems / booksPerPage) // –î–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥ —Å—á–∏—Ç–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ 10 –∫–Ω–∏–≥ (–ø–∞–≥–∏–Ω–∞—Ü–∏—è)
			: calculatePagesCount(totalItems, booksPerPage, 3); // –ú–∞–∫—Å. 3 —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è API

	// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
	const pages: number[] = [];
	handlePagesCounts(pages, totalPages, currentPage);

	// –≠—Ñ—Ñ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ "changeFilter"
	useEffect(() => {
		//–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è "changeFilter"
		//–ö–æ–≥–¥–∞ —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
		const handleChangeFilter = (e: CustomEvent<string>) => {
			setActiveFilter(e.detail); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –Ω–∞ "All books"
			setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ –ø–µ—Ä–≤—É—é
		};

		// –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
		window.addEventListener(
			"changeFilter",
			handleChangeFilter as EventListener
		);

		// –ü—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –æ—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏—è
		return () => {
			window.removeEventListener(
				"changeFilter",
				handleChangeFilter as EventListener
			);
		};
	}, []);

	return (
		<>
			<div className="page__background">
				<div className="container">
					<main className={styles.main}>
						<div className={styles.search__container}>
							<h1 className={styles.title}>Library</h1>
							<SearchForm
								activeFilter={activeFilter}
								setActiveFilter={setActiveFilter}
							/>
						</div>
						<div className={styles.filters__box}>
							<FilterButton
								text={"All books"}
								active={activeFilter === "All books"}
								onClick={() => {
									setActiveFilter("All books");
									setCurrentPage(1); // –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
								}}
							/>
							<FilterButton
								text={"Favourites"}
								active={activeFilter === "Favourites"}
								onClick={() => {
									setTimeout(() => setActiveFilter("Favourites"), 100);
									setCurrentPage(1); // –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
								}}
							/>
						</div>
						<h2 className={styles.subtitle}>Book List</h2>
						{activeFilter === "Favourites" && favourites.length === 0 ? (
							<div className={styles.notification__box}>
								<p className={styles.notification}>
									There is nothing in favorites
								</p>
								<p className={styles.notification__text}>
									Add books using ‚ù§Ô∏è
								</p>
							</div>
						) : activeFilter === "All books" &&
						  isSearching &&
						  !isSearchResultsLoading &&
						  searchResults.length === 0 ? (
							<div className={styles.notification__box}>
								<p className={styles.notification}>Nothing was found</p>
								<p className={styles.notification__text}>
									Try changing the request üìö
								</p>
							</div>
						) : (
							<BookList
								currentPage={currentPage}
								activeFilter={activeFilter}
							/>
						)}
					</main>
					<footer className={styles.footer}>
						<div className={styles.footer__text}>
							<span className={styles.footer__text_total}>
								Total books:{" "}
							</span>
							{activeFilter === "Favourites" ? (
								<span className={styles.footer__counter}>
									{favourites.length}
								</span>
							) : isSearching ? (
								<span className={styles.footer__counter}>
									{searchResults.length}
								</span>
							) : (
								<>
									<span className={styles.footer__counter}>
										{totalBooks}
									</span>
									<span className={styles.footer__note}>
										{`(Showing the first ${maxResults} results)`}
									</span>
								</>
							)}
						</div>
						<ul className={styles.pagination__list}>
							{pages.map((page) => (
								<li key={page} className={styles.list__item}>
									<button
										className={`${styles.item__link_page} ${
											currentPage === page ? styles.active : ""
										}`}
										onClick={() => setCurrentPage(page)}
									>
										{page}
									</button>
								</li>
							))}
						</ul>
					</footer>
				</div>
			</div>
		</>
	);
};

export default LibraryPage;
